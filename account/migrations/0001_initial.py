# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2020-01-24 00:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoiceHeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_code', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'invoice_headers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_order_code', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'purchase_order_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'staffs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='ユーザID')),
                ('last_name', models.CharField(default=None, max_length=30, verbose_name='苗字')),
                ('first_name', models.CharField(default=None, max_length=30, verbose_name='名前')),
                ('email', models.EmailField(default=None, max_length=254, null=True, verbose_name='メールアドレス')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='有効フラグ')),
                ('is_staff', models.BooleanField(default=False, verbose_name='管理サイトアクセス権限')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザ',
                'verbose_name_plural': 'ユーザ',
            },
        ),
        migrations.CreateModel(
            name='Account_Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0, verbose_name='ソート順')),
                ('name', models.CharField(max_length=255, verbose_name='勘定科目名')),
                ('trade_division_id', models.IntegerField(blank=True, choices=[(0, '外注・工事仕入'), (1, '経費')], default=0, verbose_name='取引区分(0:経費 1:外注等)')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0, verbose_name='ソート順')),
                ('name', models.CharField(max_length=255, verbose_name='銀行名')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
            ],
        ),
        migrations.CreateModel(
            name='Bank_Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0, verbose_name='ソート順')),
                ('name', models.CharField(max_length=255, verbose_name='銀行支店名')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Bank', verbose_name='銀行名')),
            ],
        ),
        migrations.CreateModel(
            name='Cash_Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0, verbose_name='ソート順')),
                ('settlement_date', models.DateField(blank=True, null=True, verbose_name='精算日')),
                ('receipt_date', models.DateField(blank=True, null=True, verbose_name='領収書日付')),
                ('description_partner', models.CharField(blank=True, max_length=255, verbose_name='摘要(取引先)')),
                ('description_content', models.CharField(blank=True, max_length=255, verbose_name='摘要(取引内容)')),
                ('incomes', models.IntegerField(blank=True, null=True, verbose_name='収入金額')),
                ('expences', models.IntegerField(blank=True, null=True, verbose_name='支払金額')),
                ('balance', models.IntegerField(blank=True, null=True, verbose_name='差引残高')),
                ('reduced_tax_flag', models.IntegerField(blank=True, choices=[('', '-'), (1, '８％')], null=True, verbose_name='軽減税率')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('account_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cash_book_account_title', to='account.Account_Title', verbose_name='支払科目')),
                ('purchase_order_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.PurchaseOrderData', verbose_name='注文Ｎｏ')),
                ('staff', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Staff', verbose_name='担当者')),
            ],
        ),
        migrations.CreateModel(
            name='Cash_Book_Weekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('computation_date', models.DateField(verbose_name='集計日')),
                ('balance', models.IntegerField(blank=True, null=True, verbose_name='残高')),
                ('balance_president', models.IntegerField(blank=True, null=True, verbose_name='残高(社長)')),
                ('balance_staff', models.IntegerField(blank=True, null=True, verbose_name='残高(社員)')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
            ],
        ),
        migrations.CreateModel(
            name='Cash_Flow_Detail_Actual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_date', models.DateField(blank=True, null=True, verbose_name='実際日')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事Id')),
                ('actual_expense', models.IntegerField(blank=True, default=0, verbose_name='実際支出金額')),
                ('actual_income', models.IntegerField(blank=True, default=0, verbose_name='実際収入金額')),
                ('payment_bank_id', models.IntegerField(blank=True, null=True, verbose_name='支払銀行Id')),
                ('payment_bank_branch_id', models.IntegerField(blank=True, null=True, verbose_name='支払銀行支店Id')),
                ('cash_id', models.IntegerField(blank=True, null=True, verbose_name='現金Id')),
                ('invoice_header_id', models.IntegerField(blank=True, null=True, verbose_name='請求書Id')),
                ('adjust_flag', models.IntegerField(blank=True, default=0, null=True, verbose_name='調整フラグ')),
                ('billing_year_month', models.DateField(blank=True, null=True, verbose_name='請求〆年月')),
                ('account_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Account_Title', verbose_name='科目')),
            ],
        ),
        migrations.CreateModel(
            name='Cash_Flow_Detail_Expected',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_date', models.DateField(verbose_name='予定日')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事Id')),
                ('purchase_id', models.IntegerField(default=None, null=True, verbose_name='注文Id')),
                ('expected_expense', models.IntegerField(blank=True, default=0, verbose_name='予定支出金額')),
                ('expected_income', models.IntegerField(blank=True, default=0, verbose_name='予定収入金額')),
                ('payment_bank_id', models.IntegerField(blank=True, null=True, verbose_name='支払銀行Id')),
                ('payment_bank_branch_id', models.IntegerField(blank=True, null=True, verbose_name='支払銀行支店Id')),
                ('cash_id', models.IntegerField(blank=True, null=True, verbose_name='現金Id')),
                ('billing_year_month', models.DateField(blank=True, null=True, verbose_name='請求〆年月')),
                ('account_title', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Account_Title', verbose_name='科目')),
            ],
        ),
        migrations.CreateModel(
            name='Cash_Flow_Header',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash_flow_date', models.DateField(verbose_name='日付')),
                ('expected_expense', models.IntegerField(blank=True, default=0, verbose_name='支出金額(予定)')),
                ('actual_expense', models.IntegerField(blank=True, default=0, verbose_name='支出金額(実際)')),
                ('expected_income', models.IntegerField(blank=True, default=0, verbose_name='収入金額(予定)')),
                ('actual_income', models.IntegerField(blank=True, default=0, verbose_name='収入金額(実際)')),
                ('expected_hokuetsu', models.IntegerField(blank=True, default=0, verbose_name='北越金額(予定)')),
                ('actual_hokuetsu', models.IntegerField(blank=True, default=0, verbose_name='北越金額(実際)')),
                ('expected_sanshin_tsukanome', models.IntegerField(blank=True, default=0, verbose_name='三信(塚野目)金額(予定)')),
                ('actual_sanshin_tsukanome', models.IntegerField(blank=True, default=0, verbose_name='三信(塚野目)金額(実際)')),
                ('expected_sanshin_main', models.IntegerField(blank=True, default=0, verbose_name='三信(本店)金額(予定)')),
                ('actual_sanshin_main', models.IntegerField(blank=True, default=0, verbose_name='三信(本店)金額(実際)')),
                ('expected_cash_president', models.IntegerField(blank=True, default=0, verbose_name='現金(社長)金額(予定)')),
                ('actual_cash_president', models.IntegerField(blank=True, default=0, verbose_name='現金(社長)金額(実際)')),
                ('expected_cash_company', models.IntegerField(blank=True, default=0, verbose_name='現金(会社)金額(予定)')),
                ('actual_cash_company', models.IntegerField(blank=True, default=0, verbose_name='現金(会社)金額(実際)')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0, verbose_name='ソート順')),
                ('administrative_name', models.CharField(blank=True, max_length=255, verbose_name='取引先名(管理用)')),
                ('name', models.CharField(max_length=255, verbose_name='取引先名')),
                ('trade_division_id', models.IntegerField(blank=True, choices=[(0, '外注・工事仕入'), (1, '経費')], default=0, verbose_name='取引区分ID')),
                ('payment_method_id', models.IntegerField(blank=True, choices=[('', '-'), (1, '振込'), (2, '口座振替'), (3, 'ＡＴＭ'), (4, '現金')], null=True, verbose_name='支払方法ID')),
                ('bank_name', models.CharField(max_length=255, verbose_name='振込先銀行名')),
                ('branch_name', models.CharField(max_length=255, verbose_name='振込先支店名')),
                ('account_type', models.IntegerField(blank=True, choices=[('', '-'), (1, '普通'), (2, '当座')], null=True, verbose_name='口座種別')),
                ('account_number', models.CharField(blank=True, default='', max_length=16, verbose_name='口座番号')),
                ('pay_day', models.IntegerField(blank=True, default=0, verbose_name='支払日')),
                ('pay_day_division', models.IntegerField(choices=[(0, '当月'), (1, '翌月'), (2, '翌々月'), (3, '月末(休日前倒し)'), (4, '月末(休日先送り)'), (5, '翌月末(休日前倒し)'), (6, '翌月末(休日先送り)')], default=0, verbose_name='支払フラグ(月末等)')),
                ('pay_month_flag_1', models.BooleanField(default=False, verbose_name='１月')),
                ('pay_month_flag_2', models.BooleanField(default=False, verbose_name='２月')),
                ('pay_month_flag_3', models.BooleanField(default=False, verbose_name='３月')),
                ('pay_month_flag_4', models.BooleanField(default=False, verbose_name='４月')),
                ('pay_month_flag_5', models.BooleanField(default=False, verbose_name='５月')),
                ('pay_month_flag_6', models.BooleanField(default=False, verbose_name='６月')),
                ('pay_month_flag_7', models.BooleanField(default=False, verbose_name='７月')),
                ('pay_month_flag_8', models.BooleanField(default=False, verbose_name='８月')),
                ('pay_month_flag_9', models.BooleanField(default=False, verbose_name='９月')),
                ('pay_month_flag_10', models.BooleanField(default=False, verbose_name='１０月')),
                ('pay_month_flag_11', models.BooleanField(default=False, verbose_name='１１月')),
                ('pay_month_flag_12', models.BooleanField(default=False, verbose_name='１２月')),
                ('fixed_content_id', models.IntegerField(blank=True, choices=[('', '-'), (1, '項目のみ'), (2, '項目のみ（指定月）'), (3, '項目・固定費'), (4, '項目・固定費（指定月）'), (5, '項目・概算＝仕入金額')], null=True, verbose_name='固定項目フラグ')),
                ('rough_estimate', models.IntegerField(blank=True, null=True, verbose_name='概算')),
                ('fixed_cost', models.IntegerField(blank=True, null=True, verbose_name='固定費')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('account_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Account_Title', verbose_name='支払科目')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Bank', verbose_name='振込先銀行')),
                ('bank_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Bank_Branch', verbose_name='振込先支店名')),
                ('source_bank', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_bank', to='account.Bank', verbose_name='振込/振替元銀行')),
                ('source_bank_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_bank_branch', to='account.Bank_Branch', verbose_name='振込/振替元銀行支店')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0, verbose_name='ソート順')),
                ('billing_year_month', models.DateField(verbose_name='請求〆年月')),
                ('trade_division_id', models.IntegerField(blank=True, choices=[(0, '外注・工事仕入'), (1, '経費')], null=True, verbose_name='取引区分ID')),
                ('billing_amount', models.IntegerField(blank=True, null=True, verbose_name='請求金額')),
                ('rough_estimate', models.IntegerField(blank=True, null=True, verbose_name='概算')),
                ('payment_amount', models.IntegerField(blank=True, null=True, verbose_name='支払金額')),
                ('commission', models.IntegerField(blank=True, null=True, verbose_name='手数料')),
                ('payment_method_id', models.IntegerField(blank=True, choices=[('', '-'), (1, '振込'), (2, '口座振替'), (3, 'ＡＴＭ'), (4, '現金')], default=0, null=True, verbose_name='支払方法')),
                ('payment_due_date', models.DateField(blank=True, null=True, verbose_name='支払予定日')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='支払日')),
                ('note', models.CharField(blank=True, max_length=255, verbose_name='備考')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('account_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Account_Title', verbose_name='項目')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Partner', verbose_name='取引先')),
                ('source_bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_source_bank', to='account.Bank', verbose_name='振込/振替元銀行')),
                ('source_bank_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_source_bank_branch', to='account.Bank_Branch', verbose_name='銀行支店')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_Reserve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0, verbose_name='ソート順')),
                ('billing_year_month', models.DateField(verbose_name='請求〆年月')),
                ('trade_division_id', models.IntegerField(blank=True, choices=[(0, '外注・工事仕入'), (1, '経費')], null=True, verbose_name='取引区分ID')),
                ('billing_amount', models.IntegerField(blank=True, null=True, verbose_name='請求金額')),
                ('rough_estimate', models.IntegerField(blank=True, null=True, verbose_name='概算')),
                ('payment_method_id', models.IntegerField(blank=True, choices=[('', '-'), (1, '振込'), (2, '口座振替'), (3, 'ＡＴＭ'), (4, '現金')], default=0, null=True, verbose_name='支払方法')),
                ('payment_due_date', models.DateField(blank=True, null=True, verbose_name='支払予定日')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('account_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Account_Title', verbose_name='項目')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Partner', verbose_name='取引先')),
                ('source_bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_reserve_source_bank', to='account.Bank', verbose_name='振込/振替元銀行')),
                ('source_bank_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_reserve_source_bank_branch', to='account.Bank_Branch', verbose_name='銀行支店')),
            ],
        ),
        migrations.AddField(
            model_name='cash_flow_detail_expected',
            name='partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Partner', verbose_name='取引先'),
        ),
        migrations.AddField(
            model_name='cash_flow_detail_actual',
            name='partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Partner', verbose_name='取引先'),
        ),
    ]
